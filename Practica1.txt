Realizado por:
Julian Soto Giraldo
Yoana Escobar Diaz


2. Create 3 Tablespaces (0.2) :
a. first one with 1 Gb and 3 datafiles, tablespace should be named "hospital_bills"
b. second one with 500 Mb and 1 datafile, named "test_purposes".
c. Undo tablespace with 5Mb of space and 1 datafile

a.
create tablespace hospital_bills datafile
'hospital_bills1.dbf' size 300M,
'hospital_bills2.dbf' size 200M,
'hospital_bills3.dbf' size 524M
EXTENT MANAGEMENT LOCAL 
SEGMENT SPACE MANAGEMENT AUTO;


b.
create tablespace test_purposes datafile
'test_purposes1.dbf' size 500M
EXTENT MANAGEMENT LOCAL 
SEGMENT SPACE MANAGEMENT AUTO;


C.
create UNDO TABLESPACE undots1
DATAFILE 'undotbs_1a.dbf' SIZE 5M AUTOEXTEND OFF;


3. Set the undo tablespace to be used in the system (0.2)

Alter SYSTEM SET UNDO_TABLESPACE = undots1
scope = both;


4.Create a DBA user and assign it to the tablespace called "hospital_bills", this user has unlimited space
on the tablespace (0.2)

create user adminDB 
identified by 12345
default tablespace hospital_bills
quota unlimited on hospital_bills;



5. Assign the dba role and permissions to connect to the user just created (0.2)


GRANT CONNECT,DBA TO adminDB;


6. Create 3 profiles. (0.2)
a. Profile 1: "manager " password life 40 days, one session per user, 15 minutes idle, 4 failed
login attempts

b. Profile 2: "finance " password life 15 days, one session per user, 3 minutes idle, 2 failed login
attempts

c. Profile 3: "development " password life 100 days, two session per user, 30 minutes idle, no
failed login attempts



CREATE PROFILE administrador LIMIT 
SESSIONS_PER_USER 1
IDLE_TIME 15
FAILED_LOGIN_ATTEMPTS 4
PASSWORD_LIFE_TIME 40;



CREATE PROFILE finance LIMIT 
SESSIONS_PER_USER 1
IDLE_TIME 3
FAILED_LOGIN_ATTEMPTS 2
PASSWORD_LIFE_TIME 15;



CREATE PROFILE development LIMIT 
SESSIONS_PER_USER 2
IDLE_TIME 30    
FAILED_LOGIN_ATTEMPTS UNLIMITED
PASSWORD_LIFE_TIME 100;


7. Create 4 users, assign them the tablespace "hospital_bills"; profiles created should be used for the
users, all the users should be allow to connect to the database. (0.2)

create user user1
identified by 12345
default tablespace hospital_bills
profile administrador;

create user user2
identified by 12345
default tablespace hospital_bills
profile finance;

create user user3
identified by 12345
default tablespace hospital_bills
profile development;

create user user4
identified by 12345
default tablespace hospital_bills
profile development;

GRANT CREATE SESSION TO user1,user2,user3,user4;


8. Lock the users associate with profiles: manager and finance . (0.2)


ALTER USER user1
ACCOUNT LOCK;


ALTER USER user2
ACCOUNT LOCK;



9. Delete the tablespace called "test_purposes " (0.2)


drop tablespace test_purposes including contents and datafiles;



10. Create tables with its columns according to your normalization. Create sequences for every primary
key. Create primary and foreign keys. Insert at least 10 patients, 5 cost centers, items for each cost
center (2 or 3) (Go to http://www.generatedata.com/). This should be a functional single script (.sql)
(Better if you generate sql through sql developer) (1.0)



--crear tabla de PATIENT
create table PATIENT (
IdPatient number(20) not null, 
NroPatient number(20) unique not null, 
Names varchar2(80) not null,
Address varchar2(80)not null,
IdCity number(20) not null,
CONSTRAINT PK_PATIENT_IdPatient PRIMARY KEY(IdPatient),
CONSTRAINT FK_CITY_IdCity FOREIGN KEY (IdCity) REFERENCES CITY(IdCity));

select * from PATIENT


CREATE SEQUENCE Incremento_IdPatient
INCREMENT BY 1
START WITH 1



--crear tabla de CITY
create table CITY (
IdCity number(20) not null,
City_State varchar2(80) not null,
Zip varchar2(80) not null,
CONSTRAINT PK_CITY_IdCity PRIMARY KEY(IdCity));


select * from CITY



CREATE SEQUENCE Incremento_IdCity
INCREMENT BY 1
START WITH 1


--crear tabla BILL

create table BILL (
IdBill number(20) not null, 
B_Date date not null, 
Date_Admitted date not null,
Discharge_Date date not null,
Balance_Due float(20) not null,
IdPatient number(20) not null, 
CONSTRAINT PK_BILL_IdBill PRIMARY KEY(IdBill),
CONSTRAINT FK_PATIENT_IdPatient FOREIGN KEY (IdPatient) REFERENCES PATIENT(IdPatient));

select * from BILL


CREATE SEQUENCE Incremento_IdBill
INCREMENT BY 1
START WITH 1


--crear tabla COST_CENTER

create table COST_CENTER (
IdCost_Center number(20) not null,
Code_Cost_Center number(20) unique not null,
CC_Name varchar2(80) not null,
CONSTRAINT PK_COST_CENTER_IdCost_Center PRIMARY KEY(IdCost_Center));


select * from COST_CENTER


CREATE SEQUENCE Incremento_IdCost_Center
INCREMENT BY 1
START WITH 1


--crear tabla BILL_DETAILS

create table BILL_DETAILS (
IdBill_Details number(20) not null, 
Date_Charged date not null, 
Item_Code number(20) unique not null,
BD_Description varchar2(300) not null,
Charge float(20) not null,
IdCost_Center number(20) not null,
CONSTRAINT PK_BILL_DETAILS_IdBill_Details PRIMARY KEY(IdBill_Details),
CONSTRAINT FK_COST_CENTER_IdCost_Center FOREIGN KEY (IdCost_Center) REFERENCES COST_CENTER(IdCost_Center));

select * from BILL_DETAILS


CREATE SEQUENCE Incremento_IdBill_Details
INCREMENT BY 1
START WITH 1


--crear tabla de muchos a muchos BILL_AND_DETAILS

create table BILL_AND_DETAILS (
IdBill_and_Details number(20) not null,
IdBill number(20) not null, 
IdBill_Details number(20) not null, 
CONSTRAINT PK_B_A_D_IdBill_and_Details PRIMARY KEY(IdBill_and_Details),
CONSTRAINT FK_BILL_DETAILS_IdBill_Details FOREIGN KEY (IdBill_Details) REFERENCES BILL_DETAILS(IdBill_Details),
CONSTRAINT FK_BILL_IdBill FOREIGN KEY (IdBill) REFERENCES BILL(IdBill));


select * from BILL_AND_DETAILS



CREATE SEQUENCE Incremento_IdBill_and_Details
INCREMENT BY 1
START WITH 1

